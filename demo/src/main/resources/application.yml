server:
  port: 8100
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
resilience4j:
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 10 # quantas execuções simultaneas 
  ratelimiter:
    instances:
      default:
        limit-for-period: 2 # nnumero de requisições
        limit-refresh-period: 10s # tamanho do periodo 
  retry:
    instances:
      foo-bar:
        max-attempts: 5
        wait-duration: 1 # tempo de espera entre cada tentativa de execução 
        enable-exponential-backoff: true # o tempo de espera aumenta exponencialmente por exemplo a 
        # 1 s deppois 3 s depois 5 s e etc...
      default:
        max-attempts: 4
spring:
  application:
    name: book-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/book_service?useTimezone=true&serverTimezone=UTC
    username: root
    password: root
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      fail-on-empty-beans: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  flyway:
    enabled: true
    schemas:
    - book_service
    locations:
    - classpath:db/migration
    baseline-on-migrate: true # se o bd ja existe 
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
springdoc:
  show-actuator: true
  api-docs:
    path: book-service/v3/api-docs # para o swagger do gateway conseguir reconhecer e carregar as documentrações dos microservices
